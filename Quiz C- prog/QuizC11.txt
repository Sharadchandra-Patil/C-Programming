1. 

#include <stdio.h> int main() 
{ 
  typedef static int points; 
  points x; 
  printf("%d",x);
  return 0; 
}

Answers
1. multiple storage classes in declaration specifiers     //<--Ans
2. Nothing Print
3. It print 1
4. It print 0


2. 
void *(*sum) (int*) What do you mean?

Answers
1. (*sum) is a pointer to the function, whose argument is of int* type and return type is void* //<--Ans
2. (*int) is a pointer to the function, whose argument is of sum* type and return type is void*
3. (*sum) is a pointer to the function, whose argument is of void* type and return type is int*
4. None of the above.


3. 
What will be the Output?
#include <stdio.h>
void dac()
{
	printf("dac\n");
}
void dmc()
{
	printf("dmc\n");
}
void desd()
{
	printf("desd\n");
}
int main()
{
	void (*ptr[3])() = {dac,dmc,desd };
	void (*p)() = *(ptr+1);
	(*p)();
	return 0;
}

Answers
1. dac
2. dmc   //<--Ans
3. desd
4. Compile Time Error


4. 
What will be the syntax  in the following code snippet?
#include <stdio.h>
int modify(int num) {
	return num + 1;
}
typedef ????;
int main(void) {
	int num;
	funPtr add = modify;
	num = (add)(3);
	printf("result=%d", num);
	return 0;
}
Answer
1. typedef int (*funPtr)(int);  //<--Ans
2. typedef int (funPtr*)(int);
3. typedef int (funPtr*)(*int);
4. typedef int (funPtr)(int);

5. 
What will be the Output?
#include <stdio.h>
int mul(int a, int b, int c) {
	return a * b * c;
}
int main() 
{

	typedef int (*function_pointer)(int, int, int);
	function_pointer = mul;
	printf("The product of three numbers is:%d", function_pointer(2, 3, 4));
	return 0;
}

Answers
1. The product of three numbers is:24
2. Run time error
3. Compile time error
4. Invalid declaration of function pointer  //<--Ans


6. 
What will be the Output?
#include<stdio.h>
typedef struct time
{
	int hr;
	int min;
	int sec;
} TIME;

int main(void)
{

	struct time time = { 1, 22, 33 };
	TIME t1 = time;
	printf("%d  %d %d\n", t1.hr >> t1.hr, t1.min << t1.hr, t1.sec >>t1.hr);

	return 0;
}

Answers
1. 1 22 33
2. 0  0    0
3. Compile time error
4. 0  44 16             //<--Ans


7. 
What will be the Output?
#include <stdio.h>
typedef int integer;
typedef float print;
#define print  unsigned char
int main() 
{
	int i = 10, *ptr;
	print f = 256;
	printf("size =%u size=%u", sizeof(integer), sizeof(print));
	printf("\tf=%u \n", f);
	return 0;
}

Answers
1. size =4 size=1	f=0                       //<--Ans
2. size=4	size=4		f=256
3. Compile time error
4. size=4	size=4		f=0


8. 
#include <stdio.h>int sum(int x, int y)
{
    return x+y;
}
int main( )
{
    int (*fp)(int, int);
    fp = sum;
    int s = fp(10, 15);
    printf("Sum is %d", s);
    return 0;
}

Answers
1. 10
2. 150
3. 25                        //<--Ans
4. Error


9. 
What will be the output?
#include <stdio.h>
void fun(int (*x)(int), int);
int value(int i);
int (*fp)(int) = value;
int main()
{
	fun(value, 4);
	return 0;
}
void fun(int (*i)(int), int a)
{
	i(5);
}
int value(int i)
{
	printf("%d\n", i);
	return i;
}

Answers
1. 5                          //<--Ans
2. 4
3. Compile Time Error
4. 4   5



10. 
The Following 'C' statement: int *f[](); declares:

Answers
1. a Function returning a pointer to an array of integers.
2. Array of functions returning pointers to integers.          //<--Ans
3. a Function returning an array of pointers to integers.
4. An illegal Statement.

